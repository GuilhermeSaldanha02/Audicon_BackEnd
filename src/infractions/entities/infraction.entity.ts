import { Unit } from '../../units/entities/unit.entity';
import {
  Column,
  CreateDateColumn,
  Entity,
  ManyToOne,
  PrimaryGeneratedColumn,
  UpdateDateColumn,
} from 'typeorm';

export enum InfractionStatus {
  PENDING = 'pending',
  ANALYZED = 'analyzed',
  APPROVED = 'approved',
  SENT = 'sent',
}

@Entity()
export class Infraction {
  @PrimaryGeneratedColumn()
  id: number;

  @Column({ type: 'text', comment: 'Informal description provided by staff.' })
  description: string;

  // --- Campos da IA ---
  @Column({
    type: 'text',
    nullable: true,
    comment: 'Formal description generated by AI.',
  })
  formalDescription: string;

  @Column({
    nullable: true,
    comment: 'Suggested penalty by AI (e.g., Notice, Warning, Fine).',
  })
  suggestedPenalty: string;

  @Column({
    type: 'enum',
    enum: InfractionStatus,
    default: InfractionStatus.PENDING,
    comment: 'Current state of the infraction in the workflow.',
  })
  status: InfractionStatus;
  // --- Fim dos Campos da IA ---

  @CreateDateColumn()
  occurrenceDate: Date;

  @UpdateDateColumn()
  updatedAt: Date;

  @ManyToOne(() => Unit, (unit) => unit.infractions)
  unit: Unit;
}
