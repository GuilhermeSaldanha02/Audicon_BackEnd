import { MigrationInterface, QueryRunner } from "typeorm";

export class Initial1761765454776 implements MigrationInterface {
    name = 'Initial1761765454776'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TYPE "public"."infraction_status_enum" AS ENUM('pending', 'analyzed', 'approved', 'sent')`);
        await queryRunner.query(`CREATE TABLE "infraction" ("id" SERIAL NOT NULL, "description" text NOT NULL, "formalDescription" text, "suggestedPenalty" character varying, "status" "public"."infraction_status_enum" NOT NULL DEFAULT 'pending', "occurrenceDate" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "unitId" integer, CONSTRAINT "PK_84f0acef2fce303c93b75e75142" PRIMARY KEY ("id")); COMMENT ON COLUMN "infraction"."description" IS 'Informal description provided by staff.'; COMMENT ON COLUMN "infraction"."formalDescription" IS 'Formal description generated by AI.'; COMMENT ON COLUMN "infraction"."suggestedPenalty" IS 'Suggested penalty by AI (e.g., Notice, Warning, Fine).'; COMMENT ON COLUMN "infraction"."status" IS 'Current state of the infraction in the workflow.'`);
        await queryRunner.query(`CREATE TABLE "unit" ("id" SERIAL NOT NULL, "identifier" character varying NOT NULL, "ownerName" character varying NOT NULL, "condominiumId" integer, CONSTRAINT "PK_4252c4be609041e559f0c80f58a" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "condominium" ("id" SERIAL NOT NULL, "name" character varying NOT NULL, "cnpj" character varying NOT NULL, "address" character varying NOT NULL, CONSTRAINT "UQ_1aba204322309a4549c90e6c4f9" UNIQUE ("cnpj"), CONSTRAINT "PK_6cd294f130d51cf34aadeea2a3f" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "user" ("id" SERIAL NOT NULL, "nome" character varying NOT NULL, "email" character varying NOT NULL, "senha" character varying NOT NULL, CONSTRAINT "UQ_e12875dfb3b1d92d7d7c5377e22" UNIQUE ("email"), CONSTRAINT "PK_cace4a159ff9f2512dd42373760" PRIMARY KEY ("id"))`);
        await queryRunner.query(`ALTER TABLE "infraction" ADD CONSTRAINT "FK_96fdf9172605cdb3bdfeb00c441" FOREIGN KEY ("unitId") REFERENCES "unit"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "unit" ADD CONSTRAINT "FK_18f13b4cb3ce648ab322444d3d3" FOREIGN KEY ("condominiumId") REFERENCES "condominium"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "unit" DROP CONSTRAINT "FK_18f13b4cb3ce648ab322444d3d3"`);
        await queryRunner.query(`ALTER TABLE "infraction" DROP CONSTRAINT "FK_96fdf9172605cdb3bdfeb00c441"`);
        await queryRunner.query(`DROP TABLE "user"`);
        await queryRunner.query(`DROP TABLE "condominium"`);
        await queryRunner.query(`DROP TABLE "unit"`);
        await queryRunner.query(`DROP TABLE "infraction"`);
        await queryRunner.query(`DROP TYPE "public"."infraction_status_enum"`);
    }

}
